{
  "hash": "4e99f724299f0c534198007809b5766a",
  "result": {
    "markdown": "---\nformat:\n  html:\n    toc: true\n    toc-title: On this page\n    toc-depth: 4 # default is 3\n    number-sections: false\n    anchor-sections: true\n    smooth-scroll: true\n    css: ../style.css\n---\n\n::: {.cell}\n\n:::\n\n\n# Publication quality networks {.unnumbered}\n\n##### Creating networks in [Cystoscape](https://cytoscape.org/)\n\n##### The following example shows how to use Cytoscape (v3.7.2) to create publication ready networks from assets calculated in DAVe. This example will use two components the <span class=\"txbox_green\" style=\"background-color: #808080; !important;\">edge_list</span> and the <span class=\"txbox_green\" style=\"background-color: #808080; !important;\">node_data</span> files.\n\n### Data\n##### <span class=\"txbox_green\" style=\"background-color: #808080; !important;\">edge_list.csv</span>\n\n![](img/dave.network/cytoscape/edge_list.png){.bordered}\n\n\n##### <span class=\"txbox_green\" style=\"background-color: #808080; !important;\">node_data.csv</span>\n\n![](img/dave.network/cytoscape/node_data.png){.bordered}\n\n\n\n### Upload \n\n#### Edge list\n\n##### First step is to load the <span class=\"txbox_green\" style=\"background-color: #808080; !important;\">edge_list</span>.\n\n##### In cytoscape select <span class=\"txbox_green\" style=\"background-color: #808080; !important;\">File</span> >> <span class=\"txbox_green\" style=\"background-color: #808080; !important;\">Import</span> >> <span class=\"txbox_green\" style=\"background-color: #808080; !important;\">network from File Upload</span>  and then select the <span class=\"txbox_green\" style=\"background-color: #808080; !important;\">edge_list.csv</span> file.\n\n![](img/dave.network/cytoscape/cy1.png){.bordered}\n\n\n##### Set from and to columns \n \n![](img/dave.network/cytoscape/cy2.png){.bordered}\n\n\n\n##### <span class=\"txbox_green\" style=\"background-color: #808080; !important;\">from</span> set to <span class=\"txbox_green\" style=\"background-color: #808080; !important;\">Source Node</span> \n\n![](img/dave.network/cytoscape/cy3.png){.bordered}\n\n\n##### <span class=\"txbox_green\" style=\"background-color: #808080; !important;\">to</span> set to <span class=\"txbox_green\" style=\"background-color: #808080; !important;\">Target Node</span> \n\n![](img/dave.network/cytoscape/cy4.png){.bordered}\n\n\n##### Select <span class=\"txbox_green\" style=\"background-color: #808080; !important;\">OK</span> once the source and target columns are identified.\n\n##### Overview network\n\n![](img/dave.network/cytoscape/cy5.png){.bordered}\n\n#### Node attributes \n\n##### Next load the <span class=\"txbox_green\" style=\"background-color: #808080; !important;\">node _data</span>. Select <span class=\"txbox_green\" style=\"background-color: #808080; !important;\">File</span> >> <span class=\"txbox_green\" style=\"background-color: #808080; !important;\">Import</span> >> <span class=\"txbox_green\" style=\"background-color: #808080; !important;\">Table from File</span>\n\n\n![](img/dave.network/cytoscape/cy6.png){.bordered}\n\n\n##### Select the <span class=\"txbox_green\" style=\"background-color: #808080; !important;\">ID</span> column as the variable <span class=\"txbox_green\" style=\"background-color: #808080; !important;\">Key</span>\n\n![](img/dave.network/cytoscape/cy7.png){.bordered}\n\n\n### Define mappings\n\n##### The uploaded node attributes should now be available to edit the network node and edge visual properties.\n\n![](img/dave.network/cytoscape/cy8.png){.bordered}\n\n\n##### Specify the node and edge visual properties. \n \n![](img/dave.network/cytoscape/cy9.png){.bordered}\n\n##### Take a look at the example <span class=\"txbox_green\" style=\"background-color: #808080; !important;\">cytoscape.cys</span> file for how each of the data columns were mapped to the network.\n",
    "supporting": [
      "dave_network_to_cytoscape_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}