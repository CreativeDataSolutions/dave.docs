---
format:
  html:
    toc: true
    toc-title: On this page
    toc-depth: 4 # default is 3
    number-sections: false
    anchor-sections: true
    smooth-scroll: true
    css: ../style.css
---
# Workflows {.unnumbered}

```{r, echo=FALSE,warning=FALSE,message=FALSE}
htmltools::tagList(rmarkdown::html_dependency_font_awesome()) # required for icons
suppressPackageStartupMessages(library('dave.help'))
```

##### Data anlysis workflows are encapsulated in domain specific modules. The module results can be linked, visualized and combined into interactive reports.

### Linking modules
##### Induvidual module results can be combined. For example, here is an example data worflow showing how to load, `r dcr_g('preprocess')` and review the results for your `r dcr_g('data')`.

```{mermaid}
%%{init: {'theme': 'dark' }%%
graph LR

    1((1)) --> data["fa:fa-database Data "];
    data --> 2;
    2((2)) --> preproc["fa:fa-scissors Preprocess "];
    3((3)) --> plot["fa:fa-braille Plot."];
    4((4)) --> report["fa:fa-file-text-o Report"];
    preproc --> 3;
    preproc --> 4;

    classDef green fill:#33a378, color:#fff, stroke:#33a378;
    classDef blue fill:#4472c4, color:#fff, stroke:#4472c4;
    class 1 blue;
    class 2 blue;
    class 3 blue;
    class 4 blue;
    class data green;
    class preproc green;
    class plot green;
    class report green;


```
##### The `r dcr_g('Preprocess')` module is used to separate the numeric data from its sample (row) and variable (column) meta data. This creates a `_data`, `_row_meta` and `_col_meta` objects for each original data set. An example of these objects relate to one another is shown below.

![](img/dave.main/data.png){.bordered}

##### The `r dcr_g('Preprocess')` module can also be used to overview and impute missing values.

### Module workflows
##### Each module uses the same basic workflow. For example, to prepare the data for analyis you can use the `r dcr_g('preprocess')` module with the following workflow.

```{mermaid}
%%{init: {'theme': 'dark'} }%%
graph LR
    1((1)) --> preproc["fa:fa-scissors Preprocess"];
    2((2)) --> calculate("fa:fa-sliders Calculate.");
    3((3)) --> explore("fa:fa-pencil-square-o Explore.");
    4((4))  --> plot("fa:fa-bar-chart Plot.")
    5((5)) --> report("fa:fa-file-text-o Report.");
    6((6)) --> save("fa:fa-file Save");
    preproc --> 4;
    preproc -->5;
    preproc --> 2;
    preproc --> 3;
    calculate --> 6;

    classDef green fill:#33a378, color:#fff, stroke:#33a378;
    classDef blue fill:#4472c4, color:#fff, stroke:#4472c4;
    classDef gray fill:#808080, color:#fff, stroke:#4472c4;
    class 1 blue;
    class 2 blue;
    class 3 blue;
    class 4 blue;
    class 5 blue;
    class 6 blue;
    class preproc green;
    class plot gray;
    class report gray;
    class explore gray;
    class calculate gray;
    class save gray;



```

##### Data analysis options and results can be configured and sumarized in `r dcr_gr('calculate')`. The results can be visualized using static `r dcr_gr('plot')` or interactive `r dcr_gr('explore')` tabs. The methods, results and created visualizations can be summarized in the `r dcr_gr('report')`. This can be done iteratively to explore and refine the analysis results and summaries. Once the results are finalized the data object can be `r dcr_gr('saved')` using the controls at the bottom of the `r dcr_gr('calculate')` menu.

### Full workflow
##### Below is an example of how to progress an analysis from data loading, formatting and all the way to creating rich mapped networks.
```{mermaid}
%%{init: {'theme': 'dark'}}%%
graph LR

    1((1)) --> data["fa:fa-database Data "];
    2((2)) --> preproc["fa:fa-scissors Preprocess "];
    3((3)) --> stats["fa:fa-superscript Statistics. "];
    4((4)) --> path["fa:fa-flask Pathway "];
    5((5)) --> clust["fa:fa-snowflake-o Cluster "];
    6((6)) --> multi["fa:fa-codepen Multivariate."];
    7((7)) --> ml["fa:fa-university Model."];
    8((8)) --> net["fa:fa-share-alt Network ."];
    9((9)) --> report["fa:fa-file-text-o Report "];
    vis["fa:fa-braille Plot."];
    data --> 2;
    preproc --> 3;
    preproc --> 5;
    preproc --> 6; 
    preproc --> 7;
    stats --> 4;
    preproc --> 8;
    stats --> vis;
    multi --> vis;
    clust --> vis;
    ml --> vis;
    

    classDef green fill:#33a378, color:#fff, stroke:#33a378;
    classDef blue fill:#4472c4, color:#fff, stroke:#4472c4;
    class 1 blue;
    class 2 blue;
    class 3 blue;
    class 4 blue;
    class 5 blue;
    class 6 blue;
    class 7 blue;
    class 8 blue;
    class 9 blue;
    class data green;
    class preproc green;
    class stats green;
    class clust green;
    class multi green;
    class ml green;
    class path green;
    class report green;
    class net green;
    class vis green




```

### Available analyses

* #### [Data]{.txbox_green}
  * ##### upload data from files or load saved projects
  * ##### overview and summarize data components
  * ##### manage saved data
  * ##### download
* #### [Plot]{.txbox_green}
  * ##### interactively filter data to plot
  * ##### create dynamic visualizations
    * ##### line plots
    * ##### scatter plots
    * ##### box plots
  * ##### map data to plot options
    * ##### size/width
    * ##### color
    * ##### shape
    * ##### row and/or column sub plots
  * ##### modify plotting themes, text and legend
* #### [Preprocess]{.txbox_green}
  * ##### merge numeric data with sample and variable meta data
  * ##### overview and impute missing values
* #### [Statistics]{.txbox_green}
  * ##### identify significant differences between two groups
  * ##### group summary statistics
  * ##### volcano plots
  * ##### violin and box plots
* #### [Cluster]{.txbox_green}
  * ##### hierarchical clustering
    * ##### combined samples and variables
    * ##### samples
    * ##### variables
    * ##### correlations between samples or variables
  * ##### heatmaps
  * ##### dendrograms
* #### [Multivariate]{.txbox_green}
  * ##### Principal Components Analysis (PCA)
  * ##### Visualize results
    * ##### scree plots
    * ##### scores plot
    * ##### loadings plot
    * ##### biplot
    * ##### outlier plot
* #### [Pathway]{.txbox_green}
  * ##### biochemical pathway enrichment analysis
  * ##### biochemical pathway and fold change visualization
* #### [Model]{.txbox_green}
  * ##### machine learning model training and validation
    * ##### classification
    * ##### regression
  * ##### feature selection
  * ##### model ensemble
* #### [Network]{.txbox_green}
  * ##### Calculate relationships
    * ##### biochemical product to precursor
    * ##### molecular structural similarity
    * ##### empirical regularized correlations
  * ##### interactive network visualizations
  * ##### map analysis results to network properties
  * ##### combine and modify network relationships and properties
